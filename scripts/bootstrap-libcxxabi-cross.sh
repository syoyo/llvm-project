destdir=`pwd`/dist-win
builddir=`pwd`/build-libcxxabi-cross
arch=x86_64

rm -rf ${builddir}
mkdir ${builddir}

type=shared

if [ "$type" = "shared" ]; then
    LIBCXXABI_VISIBILITY_FLAGS="-D_LIBCPP_BUILDING_LIBRARY= -U_LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS"
else
    LIBCXXABI_VISIBILITY_FLAGS="-D_LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS"
fi
cd ${builddir} && cmake \
    -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${destdir} \
    -DCMAKE_C_COMPILER=$HOME/local/llvm-mingw-20191230-ubuntu-16.04/bin/x86_64-w64-mingw32-clang \
    -DCMAKE_CXX_COMPILER=$HOME/local/llvm-mingw-20191230-ubuntu-16.04/bin/x86_64-w64-mingw32-clang++ \
    -DCMAKE_CROSSCOMPILING=TRUE \
    -DCMAKE_SYSTEM_NAME=Windows \
    -DCMAKE_C_COMPILER_WORKS=TRUE \
    -DCMAKE_CXX_COMPILER_WORKS=TRUE \
    -DLLVM_COMPILER_CHECKED=TRUE \
    -DLIBCXXABI_USE_COMPILER_RT=ON \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=ON \
    -DLIBCXXABI_ENABLE_THREADS=ON \
    -DLIBCXXABI_TARGET_TRIPLE=$arch-w64-mingw32 \
    -DLIBCXXABI_ENABLE_SHARED=OFF \
    -DLIBCXXABI_LIBCXX_INCLUDES=../libcxx/include \
    -DLIBCXXABI_LIBDIR_SUFFIX="" \
    -DLIBCXXABI_ENABLE_NEW_DELETE_DEFINITIONS=OFF \
    -DCXX_SUPPORTS_CXX_STD=TRUE \
    -DCMAKE_CXX_FLAGS="$LIBCXXABI_VISIBILITY_FLAGS -D_LIBCPP_HAS_THREAD_API_WIN32" \
    ../libcxxabi
